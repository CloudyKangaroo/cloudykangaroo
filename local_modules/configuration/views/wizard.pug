extends /layout
block head
    include /datatables_css

block content
    .row
        .page-header
            h1 Node Configuration Wizard
    .row
        .panel.panel-default
            .panel-heading Deployment Configuration
            .panel-body
                label #MOBS
                input(type='text')
                label #DPS
                input(type='text')
                label HA
                input(type='checkbox', value='HA')
                label Retention Period
                input(type='radio', value='15 min')
                |  15 min
                input(type='radio', value='30 min')
                |  30 min
                input(type='radio', value='1 hour')
                |  1 hour
                input(type='radio', value='1 day')
                |  1 day
    .row
        .panel.panel-default
            .panel-heading VM Ware
            .panel-body
                label Base OVF
                input(type='text', placeholder='URL')
                label.labelFieldWidth(for='inputduration', style='float: left;')
                span(style='width: 30px;height: 20px;font-weight: bold;') #CPU
                span(style='width: 30px;height: 20px;font-weight: bold;') #MEM
                span(style='width: 30px;height: 20px;font-weight: bold;') #I/O
                label CPU
                input(type='text',style='width: 30px;height: 20px;margin-right: 7px')
                input(type='text',style='width: 30px;height: 20px;margin-right: 7px')
                input(type='text',style='width: 30px;height: 20px;margin-right: 7px')
    .row
        button#calculateBtn.btn.btn-primary(type='button', style='float:right') Calculate

block footer
    include /datatables_js
    script(type='text/javascript').
        $(document).ready(function () {
        
        var nodeList = [];
        var updatedServiceList = [];
        var services = {services: [
                                    {
                                        "serviceName":"ZooKeeper",
                                        "NON":"3",
                                        "MPN":"2",
                                        "totalMemory":"6",
                                        "memoryThreshold":"0",
                                        "version":"cdh5.8.0"
                                        },
                                        {
                                        "serviceName":"HDFS Name Node",
                                        "NON":"2",
                                        "MPN":"4",
                                        "totalMemory":"8",
                                        "memoryThreshold":"0",
                                        "version":"cdh5.8.0"
                                        },
                                        {
                                        "serviceName":"HDFS ZKFC",
                                        "NON":"2",
                                        "MPN":"2",
                                        "totalMemory":"4",
                                        "memoryThreshold":"0",
                                        "version":"cdh5.8.0"
                                        },
                                        {
                                        "serviceName":"HDFS Journal Node",
                                        "NON":"3",
                                        "MPN":"2",
                                        "totalMemory":"6",
                                        "memoryThreshold":"0",
                                        "version":"cdh5.8.0"
                                        },
                                        {
                                        "serviceName":"HDFS Data Node",
                                        "NON":"3",
                                        "MPN":"8",
                                        "totalMemory":"24",
                                        "memoryThreshold":"2000",
                                        "version":"cdh5.8.0"
                                        },
                                        {
                                        "serviceName":"Hbase Master",
                                        "NON":"1",
                                        "MPN":"4",
                                        "totalMemory":"4",
                                        "memoryThreshold":"0",
                                        "version":"cdh5.8.0"
                                        },
                                        {
                                        "serviceName":"Hbase Regionserver",
                                        "NON":"3",
                                        "MPN":"16",
                                        "totalMemory":"48",
                                        "memoryThreshold":"2000",
                                        "version":"cdh5.8.0"
                                        },
                                        {
                                        "serviceName":"OpenTSDB (Write)",
                                        "NON":"3",
                                        "MPN":"4",
                                        "totalMemory":"12",
                                        "memoryThreshold":"2000",
                                        "version":"opentsdb-2.3.0"
                                        },
                                        {
                                        "serviceName":"OpenTSDB Docker (Read)",
                                        "NON":"6",
                                        "MPN":"2",
                                        "totalMemory":"12",
                                        "memoryThreshold":"1000",
                                        "version":"opentsdb-2.3.0"
                                        },
                                        {
                                        "serviceName":"MongoDB",
                                        "NON":"3",
                                        "MPN":"16",
                                        "totalMemory":"48",
                                        "memoryThreshold":"2000",
                                        "version":"mongodb-org-server-3.2.9"
                                        },
                                        {
                                        "serviceName":"ConfigDB",
                                        "NON":"3",
                                        "MPN":"2",
                                        "totalMemory":"6",
                                        "memoryThreshold":"2000",
                                        "version":"mongodb-org-server-3.2.9"
                                        },
                                        {
                                        "serviceName":"mongos",
                                        "NON":"1",
                                        "MPN":"1",
                                        "totalMemory":"1",
                                        "memoryThreshold":"0",
                                        "version":"mongodb-org-server-3.2.9"
                                        },
                                        {
                                        "serviceName":"Kafka",
                                        "NON":"3",
                                        "MPN":"4",
                                        "totalMemory":"12",
                                        "memoryThreshold":"2000",
                                        "version":"kafka_2.10-0.8.2.2"
                                        },
                                        {
                                        "serviceName":"Flume",
                                        "NON":"2",
                                        "MPN":"2",
                                        "totalMemory":"4",
                                        "memoryThreshold":"3000",
                                        "version":"apache-flume-1.7.0"
                                        },{
                                        "serviceName":"Redis",
                                        "NON":"1",
                                        "MPN":"2",
                                        "totalMemory":"2",
                                        "memoryThreshold":"0",
                                        "version":"redis-3.2.3"
                                        },
                                        {
                                        "serviceName":"OrientDB",
                                        "NON":"2",
                                        "MPN":"2",
                                        "totalMemory":"4",
                                        "memoryThreshold":"3000",
                                        "version":"OrientDB Server v2.2.10"
                                        },
                                        {
                                        "serviceName":"Graphs",
                                        "NON":"2",
                                        "MPN":"2",
                                        "totalMemory":"4",
                                        "memoryThreshold":"3000",
                                        "version":"latest"
                                        },
                                        {
                                        "serviceName":"TomEE",
                                        "NON":"2",
                                        "MPN":"4",
                                        "totalMemory":"8",
                                        "memoryThreshold":"3000",
                                        "version":"Apache Tomcat/7.0.68"
                                        },
                                        {
                                        "serviceName":"Datapipeline",
                                        "NON":"2",
                                        "MPN":"8",
                                        "totalMemory":"16",
                                        "memoryThreshold":"3000",
                                        "version":"latest"
                                        },
                                        {
                                        "serviceName":"Notification",
                                        "NON":"2",
                                        "MPN":"2",
                                        "totalMemory":"4",
                                        "memoryThreshold":"3000",
                                        "version":"latest"
                                        },
                                        {
                                        "serviceName":"lscontoller + sciencelogic plugin",
                                        "NON":"1",
                                        "MPN":"4",
                                        "totalMemory":"4",
                                        "memoryThreshold":"0",
                                        "version":"latest"
                                        },{
                                        "serviceName":"HAProxy (opentsdb)",
                                        "NON":"1",
                                        "MPN":"1",
                                        "totalMemory":"1",
                                        "memoryThreshold":"0",
                                        "version":"HA-Proxy version 1.5.4"
                                        },
                                        {
                                        "serviceName":"Nginx (tomee, flume)",
                                        "NON":"1",
                                        "MPN":"1",
                                        "totalMemory":"1",
                                        "memoryThreshold":"0",
                                        "version":"nginx-1.10.1"
                                        }
                                    ]}.services;
            function search(nameKey, myArray)
            {
              for (var i=0; i < myArray.length; i++) 
              {
                if (myArray[i].serviceName === nameKey) 
                {
                  return myArray[i];
                }
              }
            };
            function populateTableOnPreviewPage(serviceList,updatedServiceList,nodeList)
            {
              var row = "";
                var header = $("#resultPageHeader").empty();
                row = $("<tr><th>Services</th></tr>");
                $.each(serviceList,function(rowIndex,item){
                  row.append($("<th title='"+item.serviceName+"'/>").text(item.serviceName));
                });
                header.append(row);
                
                var tbody = $("#resultPageBody").empty();
                row = $("<tr><td style='text-align: left;font-weight: bold;'>Needed</td></tr>");
                $.each(serviceList,function(rowIndex,item){
                  row.append($("<td/>").text(item.totalMemory));
                });
                tbody.append(row);
                row = $("<tr><td style='text-align: left;font-weight: bold;'>Alloted</td></tr>");
                $.each(updatedServiceList,function(rowIndex,item){
                  row.append($("<td/>").text(item.totalMemory));
                });
                tbody.append(row);
                
                $.each(nodeList,function(rowIndex,item){
                  row = $("<tr><td style='text-align: left;'>"+item.name+"</td></tr>");
                  $.each(services,function(rowIndex1,item1){
                  
                    if(item.services.indexOf(item1.serviceName)!=-1)
                      row.append($("<td><input id='"+rowIndex+"_"+rowIndex1+"' type='checkbox' checked/></td>"));
                    else
                      row.append($("<td><input id='"+rowIndex+"_"+rowIndex1+"' type='checkbox' /></td>"));
                  });
                  tbody.append(row);
                });
            };
            $("#resultPageBody").on("change", "input[type='checkbox']", function(evt){
              var nodeRowIndex = evt.target.id.split('_')[0];
              var serviceColumnIndex = evt.target.id.split('_')[1];
              if (this.checked)
              {
              	 nodeList[nodeRowIndex].services.push(updatedServiceList[serviceColumnIndex].serviceName);
                 updatedServiceList[serviceColumnIndex].totalMemory = Number(updatedServiceList[serviceColumnIndex].totalMemory)+Number(updatedServiceList[serviceColumnIndex].MPN);
              } 
              else 
              {
                 var index = nodeList[nodeRowIndex].services.indexOf(updatedServiceList[serviceColumnIndex].serviceName);    
                 if (index !== -1) 
                 {
                   nodeList[nodeRowIndex].services.splice(index, 1);
                 }
                 updatedServiceList[serviceColumnIndex].totalMemory = Number(updatedServiceList[serviceColumnIndex].totalMemory)-Number(updatedServiceList[serviceColumnIndex].MPN);
              } 
              console.log(services);
              populateTableOnPreviewPage(services,updatedServiceList,nodeList);
            });
            $("#calculateBtn").click(function () {
                var mobs = $("#mobsTxtInput").val();
                updatedServiceList = [];
                var totalNoOfNode  = 0;
                var totalMemory = 0;
                for(i=0;i<services.length;i++)
                {
                  var obj = jQuery.extend({}, services[i]);
                  if(Number(obj.memoryThreshold))
                  {
                    obj.NON = mobs/obj.memoryThreshold;
                    obj.totalMemory =(isNaN(obj.MPN))?"NA":obj.MPN*obj.NON;
                  }
                  updatedServiceList.push(obj);
                  totalNoOfNode += Number(obj.NON);
                  if(!isNaN(obj.totalMemory))
                  {
                    totalMemory += Number(obj.totalMemory);
                  }
                }
                nodeList = [];
                var memorySize = [12,36,24,24];
                var item1 = search('ZooKeeper',updatedServiceList);
                var item2 = search('HDFS Data Node',updatedServiceList);
                var item3 = search('Kafka',updatedServiceList);
                var item4 = search('Datapipeline',updatedServiceList);
                var tempArray = [item1,item2,item3,item4];
                var nodeIndx = 0;
                for(var i=0;i<tempArray.length;i++)
                {
                  var noOfNode = tempArray[i].NON;
                  for(var k=0;k<noOfNode;k++)
                  {
                    var node = {};
                    node.name = "node00"+(nodeIndx+1);
                    node.MEM = memorySize[i];
                    node.allotedMem = 0;
                    node.services = [];
                    for(var l=0; l<updatedServiceList.length;l++)
                    {
                      var allocatedM = Number(node.allotedMem)+Number(updatedServiceList[l].MPN);
                      if(Number(allocatedM)<Number(node.MEM) && Number(updatedServiceList[l].NON)>0)
                      {
            	        node.allotedMem = allocatedM;
                        node.services.push(updatedServiceList[l].serviceName);
                        updatedServiceList[l].NON = Number(updatedServiceList[l].NON)-1;
                      }
                    }
                    nodeList.push(node);
                    nodeIndx++;
                  }
                }
                
                var row = "";
                var tbody = $("#vmwarePageBody").empty();
                $.each(nodeList,function(rowIndex,item){
                  row = $("<tr/>");
                  row.append($("<td/>").text(item.name));
                  row.append("<td><input type='text' value='8'/></td>");
                  row.append("<td><input type='text' value='"+item.MEM+"'/></td>");
                  row.append("<td><input type='text'/></td>");
                  tbody.append(row);
                });
                
                $("#deploymentForm").hide();
                $("#calculateContainer").hide();
                $("#vmWareForm").show();
                $("#priviewBtnContainer").show();
            });
            $("#previewBtn").click(function () {
            	$("#vmWareForm").hide();
            	$("#priviewBtnContainer").hide();
                $("#resultPage").show();
                $("#generateContainer").show();
                populateTableOnPreviewPage(services,updatedServiceList,nodeList);
            });
            
            $("#previewBackBtn").click(function () {
            	$("#deploymentForm").show();
            	$("#vmWareForm").hide();
            	$("#calculateContainer").show();
            	$("#priviewBtnContainer").hide();
            });
            $("#backBtn").click(function () {
            	$("#vmWareForm").show();
            	$("#priviewBtnContainer").show();
                $("#resultPage").hide();
                $("#generateContainer").hide();
            });
            $("#generatBtn").click(function () {
                var url = 'data:text/json;charset=utf8,' + encodeURIComponent(JSON.stringify(nodeList) );
                window.open(url);
            });
        });
